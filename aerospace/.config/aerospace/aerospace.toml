# AeroSpace tries to find the custom config in two locations:
# ~/.aerospace.toml
# ${XDG_CONFIG_HOME}/aerospace/aerospace.toml
# (environment variable XDG_CONFIG_HOME fallbacks to ~/.config if the variable
# is not presented)

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
# Run SketchyBar and JankyBorders together with AeroSpace.
after-startup-command = [
	'exec-and-forget sketchybar',
	'exec-and-forget borders'
]

# Start AeroSpace at login
start-at-login = true

# Normalizations - Enable for proper tiling behavior
# See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# Set to 0 to disable the padding feature
# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
accordion-padding = 48

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'horizontal'


# Mouse follows focus when focused monitor changes
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# exec-on-workspace-change callback allows to run arbitrary process when focused
# workspace changes. It may be useful for integrating with bars.
# Besides the exec.env-vars, the process has access to the following environment variables:
# AEROSPACE_FOCUSED_WORKSPACE - the workspace user switched to
# AEROSPACE_PREV_WORKSPACE - the workspace user switched from
# Notify Sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
]

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
outer.top =     [
  # offset for SketchyBar + notch on internal display (16" MPB)
  { monitor.'built-in.*' = 56 },
  72
]
outer.right =      24
outer.bottom =     24
outer.left =       24
inner.horizontal = 24
inner.vertical =   24

# Assign certain workspaces to monitors (only using workspaces 1-5)
# See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[workspace-to-monitor-force-assignment]
# All workspaces 1-5 stay on main monitor for simplicity
1 = 'main'
2 = 'main'
3 = 'main'
4 = 'main'
5 = 'main'

# Float CleanShot X windows by default
# See: https://nikitabobko.github.io/AeroSpace/guide#on-window-detected-callback
[[on-window-detected]]
if.app-id = 'pl.maketheweb.cleanshotx'
check-further-callbacks = true
run = 'layout floating'

# Ensure development apps always tile (fix for workspace 1)
[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92'
check-further-callbacks = true
run = 'layout tiling'

[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
check-further-callbacks = true
run = 'layout tiling'

[[on-window-detected]]
if.app-id = 'dev.warp.Warp-Stable'
check-further-callbacks = true
run = 'layout tiling'

[[on-window-detected]]
if.app-id = 'com.apple.finder'
check-further-callbacks = true
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.anthropic.claudefordesktop'
check-further-callbacks = true
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'company.thebrowser.dia'
check-further-callbacks = true
run = 'layout tiling'

# System utilities should always float
[[on-window-detected]]
if.app-id = 'com.apple.calculator'
check-further-callbacks = true
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
check-further-callbacks = true
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.systempreferences'
check-further-callbacks = true
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.mail'
check-further-callbacks = true
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.1password.1password7'
check-further-callbacks = true
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.apple.TextEdit'
check-further-callbacks = true
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.docker.docker'
check-further-callbacks = true
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'notion.id'
check-further-callbacks = true
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.openai.chat'
check-further-callbacks = true
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'md.obsidian'
check-further-callbacks = true
run = 'layout floating'

# Media apps should float
[[on-window-detected]]
if.app-id = 'com.spotify.client'
check-further-callbacks = true
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'org.videolan.vlc'
check-further-callbacks = true
run = 'layout floating'

# Utilities apps - set to workspace 1 and tile
[[on-window-detected]]
if.app-id = 'company.thebrowser.dia'
check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace 1']

# Development apps - set to workspace 3 and tile
[[on-window-detected]]
if.app-id = 'dev.warp.Warp-Stable'
check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace 3']

[[on-window-detected]]
if.app-id = 'com.todesktop.230313mzl4w4u92'
check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace 3']

[[on-window-detected]]
if.app-id = 'com.microsoft.VSCodeInsiders'
check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace 3']

# Media apps should float
[[on-window-detected]]
if.app-id = 'com.apple.Music'
check-further-callbacks = true
run = 'layout floating'

[[on-window-detected]]
if.app-id = 'com.github.th-ch.youtube-music'
check-further-callbacks = true
run = 'layout floating'

# Communication apps - set to workspace 2 and tile
[[on-window-detected]]
if.app-id = 'com.vng.zalo'
check-further-callbacks = true  
run = ['layout tiling', 'move-node-to-workspace 2']

[[on-window-detected]]
if.app-id = 'com.hnc.Discord'
check-further-callbacks = true
run = ['layout tiling', 'move-node-to-workspace 2']

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

# Smart Launch Layer - Launch app AND switch to appropriate workspace
# Utilities workspace (workspace 1)
cmd-alt-a = ['exec-and-forget open -a "Dia.app"', 'workspace 1']

# Communication workspace (workspace 2)  
cmd-alt-s = ['exec-and-forget open -a "Zalo.app"', 'workspace 2']

# Quick Access Layer (không chuyển workspace)
alt-z = 'exec-and-forget open -a "Zalo.app"'
cmd-alt-d = ['exec-and-forget open -a "Discord.app"', 'workspace 2']
cmd-alt-z = ['exec-and-forget open -a "Zoom.app"', 'workspace 2']

# Development workspace (workspace 3)
cmd-alt-t = ['exec-and-forget open -a "Warp.app"', 'workspace 3']
cmd-alt-c = ['exec-and-forget open -a "Cursor.app"', 'workspace 3']
cmd-alt-g = ['exec-and-forget open -a "GitHub Desktop.app"', 'workspace 3']

# Productivity workspace (workspace 4)
cmd-alt-n = ['exec-and-forget open -a "Notion.app"', 'workspace 4']
cmd-alt-o = ['exec-and-forget open -a "Obsidian.app"', 'workspace 4']

# Media workspace (workspace 5)
cmd-alt-m = ['exec-and-forget open -a "Spotify.app"', 'workspace 5']
cmd-alt-v = ['exec-and-forget open -a "VLC.app"', 'workspace 5']

# System shortcuts
cmd-alt-shift-f = 'exec-and-forget open -a "Finder.app"'
cmd-alt-shift-a = 'exec-and-forget open -a "Activity Monitor.app"'

# Switch between layouts
# See: https://nikitabobko.github.io/AeroSpace/commands#layout
# Layout toggle - CLAUDE.md specs
alt-shift-p = 'layout tiles horizontal vertical'
cmd-alt-ctrl-shift-g = 'layout accordion horizontal vertical'

# Toggle windows in and out of the tiling layout/floating - CLAUDE.md specs
# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-backtick = 'layout floating tiling'

# Make windows fullscreen
# See: https://nikitabobko.github.io/AeroSpace/commands#fullscreen
cmd-alt-ctrl-shift-m = 'fullscreen'
cmd-alt-ctrl-shift-k = 'fullscreen --no-outer-gaps'
cmd-alt-ctrl-shift-enter = 'macos-native-fullscreen'

# Switch window focus - CLAUDE.md specs
# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-left = 'focus left'
alt-down = 'focus down'
alt-up = 'focus up'
alt-right = 'focus right'

# Move windows in the given direction - CLAUDE.md specs
# See: https://nikitabobko.github.io/AeroSpace/commands#move
cmd-alt-left = 'move left'
cmd-alt-down = 'move down'
cmd-alt-up = 'move up'
cmd-alt-right = 'move right'

# Switch display focus
# See: https://nikitabobko.github.io/AeroSpace/commands#focus-monitor
cmd-alt-ctrl-shift-j = 'focus-monitor left'
cmd-alt-ctrl-shift-u = 'focus-monitor down'
cmd-alt-ctrl-shift-y = 'focus-monitor up'
cmd-alt-ctrl-shift-quote = 'focus-monitor right'

# Switch workspaces (custom layout: Q=1, W=2, 1=3, 2=4, 3=5)
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-q = 'workspace 1'
alt-w = 'workspace 2'
alt-1 = 'workspace 3'
alt-2 = 'workspace 4'
alt-3 = 'workspace 5'

# Move windows/nodes to other workspaces (custom layout: E=1, W=2, 1=3, 2=4, 3=5)
# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-e = 'move-node-to-workspace 1'
alt-shift-w = 'move-node-to-workspace 2'
alt-shift-1 = 'move-node-to-workspace 3'
alt-shift-2 = 'move-node-to-workspace 4'
alt-shift-3 = 'move-node-to-workspace 5'

# Resize windows
alt-shift-minus = 'resize smart -50'
alt-shift-equal = 'resize smart +50'

# Quick balance windows
cmd-shift-equal = 'resize smart +50'

# Join windows
alt-shift-left = 'join-with left'
alt-shift-down = 'join-with down'
alt-shift-up = 'join-with up'
alt-shift-right = 'join-with right'

# Switch focus between the two last used workspaces
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
cmd-alt-ctrl-shift-space = 'workspace-back-and-forth'


# Move workspace to next display
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
cmd-alt-ctrl-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# Service mode - CLAUDE.md specs
# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-q = [
  'mode service',
  'exec-and-forget sketchybar --trigger aerospace_service_mode_enabled_changed AEROSPACE_SERVICE_MODE_ENABLED=true',
]

# 'service' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]

# Service mode shortcuts (omerxx style)
esc = [
  'reload-config',
  'mode main',
  'exec-and-forget sketchybar --trigger aerospace_service_mode_enabled_changed AEROSPACE_SERVICE_MODE_ENABLED=false',
]
r = [
  'flatten-workspace-tree',
  'mode main',
  'exec-and-forget sketchybar --trigger aerospace_service_mode_enabled_changed AEROSPACE_SERVICE_MODE_ENABLED=false',
] # reset layout
f = [
  'layout floating tiling',
  'mode main',
  'exec-and-forget sketchybar --trigger aerospace_service_mode_enabled_changed AEROSPACE_SERVICE_MODE_ENABLED=false',
] # Toggle between floating and tiling layout
backspace = [
  'close-all-windows-but-current',
  'mode main',
  'exec-and-forget sketchybar --trigger aerospace_service_mode_enabled_changed AEROSPACE_SERVICE_MODE_ENABLED=false',
]

# Move windows to other nodes
# See: https://nikitabobko.github.io/AeroSpace/commands#join-with
n = 'join-with left'
e = 'join-with down'
i = 'join-with up'
o = 'join-with right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
# Resize windows
left = 'resize width -50'
down = 'resize height -50'
up = 'resize height +50'
right = 'resize width +50'
shift-down = 'resize smart -50'
shift-up = 'resize smart +50'


# Reload config
# See: https://nikitabobko.github.io/AeroSpace/commands#reload-config
c = [
  'reload-config',
  'mode main',
  'exec-and-forget sketchybar --trigger aerospace_service_mode_enabled_changed AEROSPACE_SERVICE_MODE_ENABLED=false',
]

