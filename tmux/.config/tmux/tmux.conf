# Colors
set -s default-terminal "tmux-256color"
set -as terminal-features ",xterm*:RGB"

# Tokyonight "Night" color palette
# TODO: Add "Day" palette
set -g @black "#1a1b26"
set -g @blue "#24283b"
set -g @blue2 "#3b4261"
set -g @blue3 "#525c7d"
set -g @blue4 "#7aa2f7"
set -g @cyan "#7dcfff"
set -g @green "#9ece6a"
set -g @magenta "#bb9af7"
set -g @orange "#ff9e64"
set -g @purple "#9d7cd8"
set -g @red "#f7768e"
set -g @white "#a9b1d6"
set -g @yellow "#e0af68"

# Terminal titles
set -g set-titles on
set -g set-titles-string "#I:#W#{?window_flags,#{window_flags}, } - #S:#I.#P"

# Status line
set -g status 2
set -g status-position top
set -g status-format[1] ""
set -g status-style "fg=default bg=default"
set -g status-left ""
set -g status-right "#[fg=#{@purple}]#S:#I.#P"

# Status messages
set -g message-style "fg=#{@blue} bg=#{@blue4}"
set -g message-command-style "fg=#{@blue} bg=#{@yellow}"

# Menus
set -g menu-border-style "fg=#{@red} bg=default"
set -g menu-style "fg=#{@blue4} bg=default"
set -g menu-selected-style "fg=#{@blue} bg=#{@red}"

# Popups
set -g popup-border-style "fg=#{@red} bg=default"

# Copy mode
set -g mode-style "fg=#{@blue} bg=#{@blue4}"
set -g copy-mode-match-style "fg=#{@blue} bg=#{@blue4}"
set -g copy-mode-current-match-style "fg=#{@blue} bg=#{@red}"
set -g copy-mode-mark-style "fg=#{@green} bg=#{@purple}"

# Window list
set -g base-index 1
set -g renumber-windows on
setw -g window-status-format "#[fg=#{@blue4}]#I:#W#{?window_flags,#{window_flags}, }#[fg=#{@blue4}]#[bg=default]"
setw -g window-status-current-format "#[fg=#{@red}]#I:#W#{?window_flags,#{window_flags}, }"

# Panes
set -g pane-base-index 1
set -g pane-border-indicators arrows
set -g pane-border-style "bg=default fg=#{@blue3}"
set -g pane-active-border-style "bg=default fg=#{@blue4}"

# Increase scrollback
set -g history-limit 150000

# Show status line messages until key is pressed
set -g display-time 0

# Enable focus events
set -s focus-events on

# Remove delay after ESC is pressed
set -s escape-time 0

# Enable mouse
set -g mouse on

# vi keys in copy-mode and in status-line
set -g mode-keys vi
set -g status-keys vi

# Make scrolling with the mousewheel work for man / less / more
# (Alt+WheelUp/Alt+WheelDown)
# https://github.com/tmux/tmux/wiki/Recipes#send-up-and-down-keys-for-the-mouse-wheel
bind -n M-WheelUpPane if -Ft= "#{mouse_any_flag}" "send -M" "send Up Up Up"
bind -n M-WheelDownPane if -Ft= "#{mouse_any_flag}" "send -M" "send Down Down Down"

# Re-order windows
bind -r C-Left swap-window -t -1\; select-window -t -1
bind -r C-Right swap-window -t +1\; select-window -t +1

# Pane movement
## Join pane
bind-key J choose-tree -Z "join-pane -s '%%'" \; display -d 0 "Join pane from..."
## Send pane
bind-key S choose-tree -Z "join-pane -t '%%'" \; display -d 0 "Send pane to..."

# Reload config
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded"

# Rotate status line visibility.
bind b run-shell "
  if [[ $(tmux show -g status) == 'status off' ]]; then
    tmux set -g status on;
    tmux display 'status: on';
  elif [[ $(tmux show -g status) == 'status on' ]]; then
    tmux set -g status 2;
    tmux display 'status: 2';
  else
    tmux set -g status off;
    tmux display 'status: off';
  fi
"

# Toggle status line position
bind B run-shell "
  if [[ $(tmux show -g status-position) == 'status-position top' ]]; then
    tmux set -g status-position bottom;
    tmux set -g status on;
    tmux display 'status-position: bottom, status: on';
  else
    tmux set -g status-position top;
    tmux set -g status 2;
    tmux display 'status-position: top, status: 2';
  fi
"

# New windows and panes keep current pane's path
bind c new-window -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"
bind % split-window -hc "#{pane_current_path}"

# Open lazygit within current path in floating window
bind g popup -w 80% -h 80% -EE -d "#{pane_current_path}" "lazygit"

# Open app/command from command-prompt in floating window
bind a command-prompt -p "open in popup: " "popup -w 80% -h 80% -EE '%%'"

# Open scratch tmux session in popup
bind v popup -w 80% -h 80% -EE "tmux new -As scratch"

# Open lazygit within current path in new window
bind G new-window -c "#{pane_current_path}" "lazygit"

# Open app/command from command-prompt in new window
bind A command-prompt -p "open in new window: "\
  "new-window -c '#{pane_current_path}' -n '%1' '%1'"

# Switch to scratch tmux session
bind V new-window "tmux new -d -s scratch; tmux switch-client -t scratch"

# vi-like keybinds for selecting text in copy-mode
bind -T copy-mode-vi 'v' send -X begin-selection
bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# TPM
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'abhinav/tmux-fastcopy'
set -g @plugin 'niqodea/tmux-matryoshka'

# Make tmux-fastcopy also copy to system clipboard
set -g @fastcopy-action 'tmux load-buffer -w -'

# Init TPM. Keep this line at the very bottom of tmux.conf!
run '~/.config/tmux/plugins/tpm/tpm'
